version: 2

build_preconditions: &build_preconditions
  filters:
    branches:
      only:
        - master
        - development

deploy_preconditions: &deploy_preconditions
  requires:
    - build
  filters:
    branches:
      only:
        - master
        - development

jobs:
  build:
    docker:
      - image: docker:18-git
    working_directory: ~/offen
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys:
            - v1-{{ .Branch }}
          paths:
            - /caches/proxy.tar
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/proxy.tar | true
      - run:
          name: Build application Docker image
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              export SITEURL="https://www.offen.dev"
              export DOCKER_IMAGE_TAG="stable"
              export ROBOTS_FILE="robots.txt.production"
            else
              export SITEURL="https://staging.offen.dev"
              export DOCKER_IMAGE_TAG="latest"
              export ROBOTS_FILE="robots.txt.staging"
            fi
            docker build --build-arg siteurl=$SITEURL --build-arg robots=$ROBOTS_FILE -t offen/proxy:$DOCKER_IMAGE_TAG -f build/proxy/Dockerfile .
      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p /caches
            docker save -o /caches/proxy.tar offen/proxy
      - save_cache:
          key: v1-{{ .Branch }}-{{ epoch }}
          paths:
            - /caches/proxy.tar
      - deploy:
          name: Push application Docker image
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              export DOCKER_IMAGE_TAG="stable"
            else
              export DOCKER_IMAGE_TAG="latest"
            fi
            echo "$DOCKER_PASS" | docker login --username $DOCKER_USER --password-stdin
            docker push offen/proxy:$DOCKER_IMAGE_TAG

  deploy:
    working_directory: ~/offen
    docker:
      - image: circleci/golang:1.12
    steps:
      - checkout
      - run:
          name: Define target environment
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              echo 'export TARGET_ENVIRONMENT="production"' >> $BASH_ENV
            else
              echo 'export TARGET_ENVIRONMENT="staging"' >> $BASH_ENV
            fi
      - run:
          name: Install deployment dependencies
          command: |
            sudo apt-get update && sudo apt-get install -qq -y python-pip libpython-dev
            curl -O https://bootstrap.pypa.io/get-pip.py && sudo python get-pip.py
            sudo pip install -q awscli --upgrade
            sudo pip install awsebcli --upgrade
      - run:
          name: Run database migrations
          command: |
            echo "TBD"
      - run:
          name: Deploy
          command: |
            cp Dockerrun.aws.json.$TARGET_ENVIRONMENT Dockerrun.aws.json
            eb deploy

workflows:
  version: 2
  build_deploy:
    jobs:
      - build:
          <<: *build_preconditions
      - deploy:
          <<: *deploy_preconditions

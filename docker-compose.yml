version: '3'

services:
  database:
    image: postgres:11.2
    environment:
      - POSTGRES_PASSWORD=develop

  kms:
    build:
      context: '.'
      dockerfile: Dockerfile.golang
    working_dir: /offen/kms
    volumes:
      - .:/offen
      - kmsdeps:/go/pkg/mod
    environment:
      - KEY_FILE=key.txt
      - PORT=8081
    ports:
      - 8081:8081
    command: refresh run

  server:
    build:
      context: '.'
      dockerfile: Dockerfile.golang
    working_dir: /offen/server
    volumes:
      - .:/offen
      - serverdeps:/go/pkg/mod
    environment:
      - POSTGRES_CONNECTION_STRING=postgres://postgres:develop@database:5432/postgres?sslmode=disable
      - KMS_ENCRYPTION_ENDPOINT=http://kms:8081/encrypt
      - PORT=8080
    ports:
      - 8080:8080
    command: refresh run
    links:
      - database
    depends_on:
      - kms

  vault:
    build:
      context: '.'
      dockerfile: Dockerfile.node
    working_dir: /offen/vault
    volumes:
      - .:/offen
      - vaultdeps:/offen/vault/node_modules
    command: npm start -- --port 9977
    ports:
      - 9977:9977
    environment:
      - SERVER_HOST=http://localhost:8080
      - KMS_HOST=http://localhost:8081
      - AUDITORIUM_HOST=http://localhost:9955

  script:
    build:
      context: '.'
      dockerfile: Dockerfile.node
    working_dir: /offen/script
    volumes:
      - .:/offen
      - scriptdeps:/offen/script/node_modules
    command: npm start -- --port 9966
    ports:
      - 9966:9966
    environment:
      - VAULT_HOST=http://localhost:9977

  auditorium:
    build:
      context: '.'
      dockerfile: Dockerfile.node
    working_dir: /offen/auditorium
    volumes:
      - .:/offen
      - auditoriumdeps_2:/offen/auditorium/node_modules
    command: npm start -- --port 9955
    ports:
      - 9955:9955
    environment:
      - VAULT_HOST=http://localhost:9977

volumes:
  kmsdeps:
  serverdeps:
  scriptdeps:
  auditoriumdeps_2:
  vaultdeps:
